buildscript {
	// ext는 build.gradle에서 사용하는 전역 변수 springBootVersion을 선언하고 값을 '2.1.7.RELEASE'로 하겠다.
	// = spring-boot-gradle-plugin라는 스프링부트 그레들 플러그인의 2.1.7.RELEASE를 의존성으로 받겠다.
	ext {
		springBootVersion = '2.1.7.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// 이 4개의 플러그인은 자바와 스프링 부트를 사용하기 위한 필수 플러그인
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

// 스프링 부트이 의존성들을 관리해 주는 플러그인
apply plugin: 'io.spring.dependency-management'

/*plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
}*/

group = 'com.project.3PM'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// 의존성 (라이브러리)들을 어떤 원격 저장소에서 받을지를 정함
// 기본적으로 mavenCentral 을 사용, 최근 라이브러리 업로드 난이도 때문에 jcenter도 사용
repositories {
	mavenCentral()
}

// for junit 5
/*test {
	useJUnitPlatform()
}*/

// 프로젝트 개발에 필요한 의존성들을 선언
dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	/*testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'*/
}


tasks.named('test') {
	useJUnitPlatform()
}


